<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>30场双周赛</title>
    <link href="/2020/07/18/30%E5%9C%BA%E5%8F%8C%E5%91%A8%E8%B5%9B/"/>
    <url>/2020/07/18/30%E5%9C%BA%E5%8F%8C%E5%91%A8%E8%B5%9B/</url>
    
    <content type="html"><![CDATA[<h1 id="5177-转变日期格式"><a href="#5177-转变日期格式" class="headerlink" title="5177. 转变日期格式"></a>5177. 转变日期格式</h1><h2 id="题目说明"><a href="#题目说明" class="headerlink" title="题目说明"></a>题目说明</h2><p>给你一个字符串 date ，它的格式为 Day Month Year ，其中：</p><p>Day 是集合 {“1st”, “2nd”, “3rd”, “4th”, …, “30th”, “31st”} 中的一个元素。<br>Month 是集合 {“Jan”, “Feb”, “Mar”, “Apr”, “May”, “Jun”, “Jul”, “Aug”, “Sep”, “Oct”, “Nov”, “Dec”} 中的一个元素。<br>Year 的范围在 [1900, 2100] 之间。<br>请你将字符串转变为 YYYY-MM-DD 的格式，其中：</p><p>YYYY 表示 4 位的年份。<br>MM 表示 2 位的月份。<br>DD 表示 2 位的天数。</p><p>示例 1：</p><p>输入：date = “20th Oct 2052”<br>输出：”2052-10-20”</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>&#123;    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">reformatDate</span><span class="hljs-params">(String date)</span> </span>&#123;        String [] num=date.split(<span class="hljs-string">" "</span>);        <span class="hljs-comment">//截取天数</span>        String days=num[<span class="hljs-number">0</span>].substring(<span class="hljs-number">0</span>,num[<span class="hljs-number">0</span>].length()-<span class="hljs-number">2</span>);        <span class="hljs-keyword">if</span>(days.length()==<span class="hljs-number">1</span>)days=<span class="hljs-string">"0"</span>+days;        String months=<span class="hljs-string">""</span>;        String[] month= &#123;<span class="hljs-string">"Jan"</span>, <span class="hljs-string">"Feb"</span>, <span class="hljs-string">"Mar"</span>, <span class="hljs-string">"Apr"</span>, <span class="hljs-string">"May"</span>, <span class="hljs-string">"Jun"</span>, <span class="hljs-string">"Jul"</span>, <span class="hljs-string">"Aug"</span>, <span class="hljs-string">"Sep"</span>, <span class="hljs-string">"Oct"</span>, <span class="hljs-string">"Nov"</span>, <span class="hljs-string">"Dec"</span>&#125;;        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">12</span>;i++)&#123;            <span class="hljs-keyword">if</span>(month[i].equals(num[<span class="hljs-number">1</span>]))&#123;                months=((i&lt;<span class="hljs-number">9</span>)?<span class="hljs-string">"0"</span>:<span class="hljs-string">""</span>)+(i+<span class="hljs-number">1</span>);            &#125;        &#125;        <span class="hljs-keyword">return</span> num[<span class="hljs-number">2</span>]+<span class="hljs-string">"-"</span>+months+<span class="hljs-string">"-"</span>+days;    &#125;&#125;</code></pre><h1 id="5445-子数组和排序后的区间和"><a href="#5445-子数组和排序后的区间和" class="headerlink" title="5445. 子数组和排序后的区间和"></a>5445. 子数组和排序后的区间和</h1><h2 id="题目说明-1"><a href="#题目说明-1" class="headerlink" title="题目说明"></a>题目说明</h2><p>给你一个数组 nums ，它包含 n 个正整数。你需要计算所有非空连续子数组的和，并将它们按升序排序，得到一个新的包含 n * (n + 1) / 2 个数字的数组。</p><p>请你返回在新数组中下标为 left 到 right （下标从 1 开始）的所有数字和（包括左右端点）。由于答案可能很大，请你将它对 10^9 + 7 取模后返回。</p><p>示例 1：</p><p>输入：nums = [1,2,3,4], n = 4, left = 1, right = 5<br>输出：13<br>解释：所有的子数组和为 1, 3, 6, 10, 2, 5, 9, 3, 7, 4 。将它们升序排序后，我们得到新的数组 [1, 2, 3, 3, 4, 5, 6, 7, 9, 10] 。下标从 le = 1 到 ri = 5 的和为 1 + 2 + 3 + 3 + 4 = 13 。<br>示例 2：</p><p>输入：nums = [1,2,3,4], n = 4, left = 3, right = 4<br>输出：6<br>解释：给定数组与示例 1 一样，所以新数组为 [1, 2, 3, 3, 4, 5, 6, 7, 9, 10] 。下标从 le = 3 到 ri = 4 的和为 3 + 3 = 6 。<br>示例 3：</p><p>输入：nums = [1,2,3,4], n = 4, left = 1, right = 10<br>输出：50</p><h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>&#123;    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">rangeSum</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] nums, <span class="hljs-keyword">int</span> n, <span class="hljs-keyword">int</span> left, <span class="hljs-keyword">int</span> right)</span> </span>&#123;        LinkedList&lt;Integer&gt; list = <span class="hljs-keyword">new</span> LinkedList&lt;&gt;();        <span class="hljs-keyword">int</span> sum = <span class="hljs-number">0</span>;        <span class="hljs-comment">//暴力循环每一种情况</span>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; nums.length; i++) &#123;            sum = <span class="hljs-number">0</span>;            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = i; j &lt; nums.length; j++) &#123;                sum += nums[j];                list.add(sum);            &#125;        &#125;        <span class="hljs-comment">//给每一种子数组和排序</span>        Collections.sort(list);        <span class="hljs-keyword">int</span> res = <span class="hljs-number">0</span>;        <span class="hljs-comment">//找到相对范围，因为下标是从0开始，但题目是从1开始，所以都要减1</span>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = left - <span class="hljs-number">1</span>; i &lt;= right - <span class="hljs-number">1</span>; i++) &#123;            res+=list.get(i);            <span class="hljs-keyword">if</span> (res &gt;  <span class="hljs-number">1000000007</span> ) &#123;                res -= <span class="hljs-number">1000000007</span>;            &#125;        &#125;        <span class="hljs-keyword">return</span> res;    &#125;&#125;</code></pre><h1 id="5446-三次操作后最大值与最小值的最小差"><a href="#5446-三次操作后最大值与最小值的最小差" class="headerlink" title="5446. 三次操作后最大值与最小值的最小差"></a>5446. 三次操作后最大值与最小值的最小差</h1><h2 id="题目说明-2"><a href="#题目说明-2" class="headerlink" title="题目说明"></a>题目说明</h2><p>给你一个数组 nums ，每次操作你可以选择 nums 中的任意一个数字并将它改成任意值。</p><p>请你返回三次操作后， nums 中最大值与最小值的差的最小值。</p><p>示例 1：</p><p>输入：nums = [5,3,2,4]<br>输出：0<br>解释：将数组 [5,3,2,4] 变成 [2,2,2,2].<br>最大值与最小值的差为 2-2 = 0 。<br>示例 2：</p><p>输入：nums = [1,5,0,10,14]<br>输出：1<br>解释：将数组 [1,5,0,10,14] 变成 [1,1,0,1,1] 。<br>最大值与最小值的差为 1-0 = 1 。<br>示例 3：</p><p>输入：nums = [6,6,0,1,1,4,6]<br>输出：2<br>示例 4：</p><p>输入：nums = [1,5,6,14,15]<br>输出：1</p><h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><blockquote><p>思考</p><p>首先题目要求改变三个数，那么这三个数完全可以改变成他们中位数，这样两端就平均，所以数值最小</p><p>排序之后只需要删除两端靠近边界的三个数</p><p>比如数组是[0,1,2,3,4,5], 我们可以移除0,1,2, 0,1,5, 0,4,5以及3,4,5, 一共这 4 种方案, 然后求这些方案中移除后的最大最小值差值的最小值</p><p>如果移除前三位，结果等同于最后一位和第四位的差值</p><p>如果移除前两位和最后一位，结果等同于倒数第二位和第三位的差值</p><p>如果移除第一位和倒数两位，结果等同于倒数第三位和第二位的差值</p><p>如果移除最后三位，结果等同于倒数第四位和第一位的差值</p><p>所以我们只需要判断这四种情况大小即可</p></blockquote><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>&#123;    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">minDifference</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] nums)</span> </span>&#123;        <span class="hljs-keyword">if</span>(nums.length &lt;= <span class="hljs-number">4</span>) &#123;<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;<span class="hljs-keyword">int</span> n = nums.length;Arrays.sort(nums);<span class="hljs-keyword">int</span>[] arr = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[] &#123;nums[n-<span class="hljs-number">4</span>]-nums[<span class="hljs-number">0</span>],nums[n-<span class="hljs-number">3</span>]-nums[<span class="hljs-number">1</span>],nums[n-<span class="hljs-number">2</span>]-nums[<span class="hljs-number">2</span>],nums[n-<span class="hljs-number">1</span>]-nums[<span class="hljs-number">3</span>]&#125;;Arrays.sort(arr);<span class="hljs-keyword">return</span> arr[<span class="hljs-number">0</span>];    &#125;&#125;</code></pre><h1 id="5447-石子游戏-IV"><a href="#5447-石子游戏-IV" class="headerlink" title="5447. 石子游戏 IV"></a>5447. 石子游戏 IV</h1><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>Alice 和 Bob 两个人轮流玩一个游戏，Alice 先手。</p><p>一开始，有 n 个石子堆在一起。每个人轮流操作，正在操作的玩家可以从石子堆里拿走 任意 非零 平方数 个石子。</p><p>如果石子堆里没有石子了，则无法操作的玩家输掉游戏。</p><p>给你正整数 n ，且已知两个人都采取最优策略。如果 Alice 会赢得比赛，那么返回 True ，否则返回 False 。</p><p>示例 1：</p><p>输入：n = 1<br>输出：true<br>解释：Alice 拿走 1 个石子并赢得胜利，因为 Bob 无法进行任何操作。<br>示例 2：</p><p>输入：n = 2<br>输出：false<br>解释：Alice 只能拿走 1 个石子，然后 Bob 拿走最后一个石子并赢得胜利（2 -&gt; 1 -&gt; 0）。<br>示例 3：</p><p>输入：n = 4<br>输出：true<br>解释：n 已经是一个平方数，Alice 可以一次全拿掉 4 个石子并赢得胜利（4 -&gt; 0）。<br>示例 4：</p><p>输入：n = 7<br>输出：false<br>解释：当 Bob 采取最优策略时，Alice 无法赢得比赛。<br>如果 Alice 一开始拿走 4 个石子， Bob 会拿走 1 个石子，然后 Alice 只能拿走 1 个石子，Bob 拿走最后一个石子并赢得胜利（7 -&gt; 3 -&gt; 2 -&gt; 1 -&gt; 0）。<br>如果 Alice 一开始拿走 1 个石子， Bob 会拿走 4 个石子，然后 Alice 只能拿走 1 个石子，Bob 拿走最后一个石子并赢得胜利（7 -&gt; 6 -&gt; 2 -&gt; 1 -&gt; 0）。<br>示例 5：</p><p>输入：n = 17<br>输出：false<br>解释：如果 Bob 采取最优策略，Alice 无法赢得胜利。</p><h2 id="题解-3"><a href="#题解-3" class="headerlink" title="题解"></a>题解</h2><blockquote><p>理解：</p><p>首先Alice 想要赢，那么给Bob 剩下的石头数量就要必输</p><p>于是，就要遍历Alice “拿”的数量（实际Alice只能拿平方数，但这里为了好理解，把它说成Alice 要拿的数量）</p><p>如果Alice 拿五个的话，那么 就要看下Bob拿1个，拿四个是否能赢，如果不能赢  那么Alice 就赢了</p><p>于是求出状态转移方程  dp[i]=!dp[i-j*j]</p><p>一旦发现Bob不能赢的话   那么  Alice 拿的这个数量就为可以取胜的数量</p></blockquote><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>&#123;    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">winnerSquareGame</span><span class="hljs-params">(<span class="hljs-keyword">int</span> n)</span> </span>&#123;        <span class="hljs-keyword">boolean</span>[] dp = <span class="hljs-keyword">new</span> <span class="hljs-keyword">boolean</span>[n + <span class="hljs-number">1</span>];        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">1</span>; i - j * j &gt;= <span class="hljs-number">0</span>; j++) &#123;                dp[i] = !dp[i - j * j];                <span class="hljs-keyword">if</span> (dp[i]) <span class="hljs-keyword">break</span>;            &#125;        &#125;        <span class="hljs-keyword">return</span> dp[n];    &#125;&#125;</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/07/18/hello-world/"/>
    <url>/2020/07/18/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="hljs bash">$ hexo new <span class="hljs-string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="hljs bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="hljs bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="hljs bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
